#! /bin/sh

set -o noglob

#set -x

#   PSQL Query Helper

execute () {

 docker exec -i $(docker ps -a -q -f "name=postgres_1") psql -U postgres -d $db -c "$1"
# exit $?
}

_execute () {

 docker exec -i $(docker ps -a -q -f "name=postgres_1") psql -U postgres -d $db -c "$1"

}


createdb () {

 docker exec -i $(docker ps -a -q -f "name=postgres_1") psql -U postgres -c "create database control;"

 _execute "create table invoices(id varchar(80) not null)"

 _execute "alter table invoices add dh timestamp not null"

 _execute "alter table invoices add store varchar(80)"

 _execute "alter table invoices add invoice varchar(512) not null"

 _execute "alter table invoices add originalAmount bigint"

 _execute "alter table invoices add amount bigint not null"

 _execute "alter table invoices add paid bigint"

 _execute "alter table invoices add fee bigint"

 _execute "ALTER TABLE ONLY invoices ADD CONSTRAINT PK_Invoices PRIMARY KEY (\"id\")";

 _execute "create table stores(id varchar(80) not null)"

 _execute "alter table stores add name varchar(100) not null"

 _execute "ALTER TABLE ONLY stores ADD CONSTRAINT PK_stores PRIMARY KEY (\"id\")";

 _execute "create table charity(id varchar(10) not null)"

 _execute "alter table charity add rate double precision not null"

 _execute "alter table charity add url text"

 _execute "ALTER TABLE ONLY charity ADD CONSTRAINT PK_charity PRIMARY KEY (\"id\")";

 _execute "alter table charity alter id type varchar(10)"

  

}




cmd=$1

exec=$2

field=$3

db=$4


if [ -z "$cmd" ]
then
  if [ -z "$field" ]
  then
     echo "{\"error\", true}"
  fi
  exit 1
fi

if [ -z "$db" ]
then
  db=control
fi

if [ -z "$exec" ]
then
  exec=query
fi

if [ "$cmd" = "create" ]
then
   createdb
   exit
fi 


if [ "$exec" = "query" ] || [ "$exec" = "select" ]
then
	ret=$(docker exec -i $(docker ps -a -q -f "name=postgres_1") psql -U postgres -d $db -A -t -c "select json_agg(t) from ($cmd) t")

	status=$?

        #echo $ret
	if [ ! $status -eq 0 ]
	then
	  if [ -z "$field" ]
	  then
	  	echo "{\"error\", true}"
          fi
          exit 1
	fi

	#result=$(echo "$ret" | grep -o -P '(?<=\ \[).*(?=\])')
        result=$ret

	#BUG: multiple rows are separeted by +

	if [ -z "$result" ]
	then
	  if [ -z "$field" ]
	  then
		  result="[{}]"
	  fi
        else 
	  if [ -n "$field" ]
 	  then
             result=$(echo $result| jq -r .[0].$field)
          fi
	fi

	echo $result
else
   execute "$cmd"
   exit $?

fi




